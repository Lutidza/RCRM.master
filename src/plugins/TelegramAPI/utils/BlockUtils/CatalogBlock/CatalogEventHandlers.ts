// üìå –ü—É—Ç—å: src/plugins/TelegramAPI/utils/BlockUtils/CatalogBlock/CatalogEventHandlers.ts
// üìå –í–µ—Ä—Å–∏—è: 1.2.0
//
// [CHANGELOG]
// - –£–±—Ä–∞–Ω–∞ –∏–∑–±—ã—Ç–æ—á–Ω–∞—è –ª–æ–≥–∏–∫–∞ –∏–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ catalogCategory.
// - –î–æ–±–∞–≤–ª–µ–Ω –≤—ã–∑–æ–≤ renderCategoryItems –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è catalogCategory.
// - –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â—ë" –¥–µ–ª–µ–≥–∏—Ä–æ–≤–∞–Ω–∞ –≤ renderCategoryItems.

import type { Payload } from 'payload';
import { log } from '@/plugins/TelegramAPI/utils/SystemUtils/Logger';
import type { BotContext } from '@/plugins/TelegramAPI/utils/BotUtils/initializeBots';
import { renderCategoryItems } from '@/plugins/TelegramAPI/utils/BlockUtils/CatalogBlock/renderCategoryItems';

/**
 * –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∫–∞—Ç–∞–ª–æ–≥–∞.
 * @param {string} cbType - –¢–∏–ø callback-—Å–æ–±—ã—Ç–∏—è.
 * @param {string} rawCategoryId - –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
 * @param {string} rawItemsPerPage - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É.
 * @param {BotContext} ctx - –ö–æ–Ω—Ç–µ–∫—Å—Ç Telegram –±–æ—Ç–∞.
 * @param {Payload} payload - –≠–∫–∑–µ–º–ø–ª—è—Ä Payload CMS.
 */
export async function handleCatalogEvent(
  cbType: string,
  rawCategoryId: string,
  rawItemsPerPage: string,
  ctx: BotContext,
  payload: Payload,
): Promise<void> {
  try {
    if (!ctx.callbackQuery || !ctx.callbackQuery.data) {
      throw new Error('–î–∞–Ω–Ω—ã–µ callback –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç.');
    }

    // –ü–∞—Ä—Å–∏–Ω–≥ –¥–∞–Ω–Ω—ã—Ö callback
    const categoryId = parseInt(rawCategoryId, 10);
    const itemsPerPage = parseInt(rawItemsPerPage, 10) || 3; // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    if (isNaN(categoryId)) {
      log('error', `–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: "${rawCategoryId}".`, payload);
      await ctx.reply('–û—à–∏–±–∫–∞: –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.');
      return;
    }

    switch (cbType) {
      case 'catalogCategory': {
        // –í—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Ç–æ–≤–∞—Ä–æ–≤
        await renderCategoryItems(ctx, categoryId.toString(), { page: 1, itemsPerPage }, payload);
        break;
      }

      default:
        await ctx.reply('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞.');
        log('error', `–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å–æ–±—ã—Ç–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞: ${cbType}`, payload);
    }
  } catch (error: any) {
    log('error', `–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞: ${error.message}`, payload);
    await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–±—ã—Ç–∏—è.');
  }
}
